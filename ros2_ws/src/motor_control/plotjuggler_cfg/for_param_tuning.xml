<?xml version='1.0' encoding='UTF-8'?>
<root>
 <tabbed_widget name="Main Window" parent="main_window">
  <Tab containers="1" tab_name="angle_controller">
   <Container>
    <DockSplitter sizes="0.5;0.5" count="2" orientation="-">
     <DockArea name="...">
      <plot mode="TimeSeries" flip_x="false" style="Lines" flip_y="false">
       <range bottom="6.283185" top="6.283204" right="1733354747.340295" left="1733354727.340547"/>
       <limitY/>
       <curve name="/calc_info/angle_controller/now_angle" color="#1f77b4"/>
       <curve name="/calc_info/angle_controller/target_angle" color="#d62728"/>
      </plot>
     </DockArea>
     <DockArea name="...">
      <plot mode="TimeSeries" flip_x="false" style="Lines" flip_y="false">
       <range bottom="-1.500000" top="1.500000" right="1733354747.340295" left="1733354727.340547"/>
       <limitY min="-1.5" max="1.5"/>
       <curve name="/calc_info/angle_controller/pid_calc_info/output" color="#1ac938"/>
       <curve name="/calc_info/angle_controller/pid_calc_info/p_term" color="#ff7f0e"/>
       <curve name="/calc_info/angle_controller/pid_calc_info/i_term" color="#f14cc1"/>
       <curve name="/calc_info/angle_controller/pid_calc_info/d_term" color="#9467bd"/>
      </plot>
     </DockArea>
    </DockSplitter>
   </Container>
  </Tab>
  <Tab containers="1" tab_name="velocity_controller">
   <Container>
    <DockSplitter sizes="0.5;0.5" count="2" orientation="-">
     <DockArea name="...">
      <plot mode="TimeSeries" flip_x="false" style="Lines" flip_y="false">
       <range bottom="6.268991" top="6.299462" right="1733355003.215809" left="1733354983.215985"/>
       <limitY/>
       <curve name="/calc_info/velocity_controller/target_velocity" color="#1f77b4"/>
       <curve name="/calc_info/velocity_controller/now_velocity" color="#d62728"/>
      </plot>
     </DockArea>
     <DockArea name="...">
      <plot mode="TimeSeries" flip_x="false" style="Lines" flip_y="false">
       <range bottom="-1.500000" top="1.500000" right="1733355003.215809" left="1733354983.215985"/>
       <limitY min="-1.5" max="1.5"/>
       <curve name="/calc_info/velocity_controller/pid_calc_info/output" color="#1ac938"/>
       <curve name="/calc_info/velocity_controller/pid_calc_info/p_term" color="#ff7f0e"/>
       <curve name="/calc_info/velocity_controller/pid_calc_info/i_term" color="#f14cc1"/>
       <curve name="/calc_info/velocity_controller/pid_calc_info/d_term" color="#9467bd"/>
       <curve name="/calc_info/velocity_controller/ff_velocity_term" color="#17becf"/>
       <curve name="/calc_info/velocity_controller/ff_acceleration_term" color="#bcbd22"/>
      </plot>
     </DockArea>
    </DockSplitter>
   </Container>
  </Tab>
  <Tab containers="1" tab_name="angle_velocity_controller">
   <Container>
    <DockSplitter sizes="0.5;0.5" count="2" orientation="-">
     <DockArea name="...">
      <plot mode="TimeSeries" flip_x="false" style="Lines" flip_y="false">
       <range bottom="7.794482" top="9.535596" right="1733354974.456184" left="1733354954.456404"/>
       <limitY/>
       <curve name="/calc_info/angle_velocity_controller/now_angle" color="#1f77b4"/>
       <curve name="/calc_info/angle_velocity_controller/target_angle" color="#d62728"/>
      </plot>
     </DockArea>
     <DockArea name="...">
      <plot mode="TimeSeries" flip_x="false" style="Lines" flip_y="false">
       <range bottom="-8.218583" top="6.960008" right="1733354974.456184" left="1733354954.456404"/>
       <limitY/>
       <curve name="/calc_info/angle_velocity_controller/pid_calc_info/output" color="#1ac938"/>
       <curve name="/calc_info/angle_velocity_controller/pid_calc_info/p_term" color="#ff7f0e"/>
       <curve name="/calc_info/angle_velocity_controller/pid_calc_info/i_term" color="#f14cc1"/>
       <curve name="/calc_info/angle_velocity_controller/pid_calc_info/d_term" color="#9467bd"/>
      </plot>
     </DockArea>
    </DockSplitter>
   </Container>
  </Tab>
  <Tab containers="1" tab_name="now_angle">
   <Container>
    <DockSplitter sizes="1" count="1" orientation="-">
     <DockArea name="...">
      <plot mode="TimeSeries" flip_x="false" style="Lines" flip_y="false">
       <range bottom="125.442432" top="190.491162" right="1733355003.215878" left="1733354993.355816"/>
       <limitY/>
       <curve name="/now_angle/angle" color="#1f77b4"/>
      </plot>
     </DockArea>
    </DockSplitter>
   </Container>
  </Tab>
  <currentTabIndex index="3"/>
 </tabbed_widget>
 <use_relative_time_offset enabled="0"/>
 <!-- - - - - - - - - - - - - - - -->
 <!-- - - - - - - - - - - - - - - -->
 <Plugins>
  <plugin ID="DataLoad CSV">
   <parameters delimiter="0" time_axis=""/>
  </plugin>
  <plugin ID="DataLoad MCAP"/>
  <plugin ID="DataLoad ROS2 bags">
   <use_header_stamp value="false"/>
   <discard_large_arrays value="true"/>
   <max_array_size value="100"/>
   <boolean_strings_to_number value="true"/>
   <remove_suffix_from_strings value="true"/>
   <selected_topics value="/belt1/switch;/belt2/switch;/classification/color/classify_info;/classification/color/normalized_value;/classification/color/value;/classification/motor/angle/feedback;/classification/paddy/color;/mobility/debug/imu_raw_value;/mobility/debug/light_sensor_debug_value;/mobility/debug/odometry;/mobility/imu_value;/mobility/light_sensor_read_white;/mobility/light_sensor_value;/mobility/pose_dist_global;/mobility/pose_vel_global;/mobility/total_moving_distance;/mobility/wall_distance_sensor_value;/mobility/wall_switch_value;/tof/distance"/>
  </plugin>
  <plugin ID="DataLoad ULog"/>
  <plugin ID="ROS2 Topic Subscriber">
   <use_header_stamp value="false"/>
   <discard_large_arrays value="true"/>
   <max_array_size value="50"/>
   <boolean_strings_to_number value="true"/>
   <remove_suffix_from_strings value="true"/>
   <selected_topics value="/calc_info/angle_controller;/calc_info/angle_velocity_controller;/calc_info/velocity_controller;/target/angle;/target/angle_velocity;/target/velocity;/now_angle"/>
  </plugin>
  <plugin ID="UDP Server"/>
  <plugin ID="WebSocket Server"/>
  <plugin ID="ZMQ Subscriber"/>
  <plugin ID="Fast Fourier Transform"/>
  <plugin ID="Quaternion to RPY"/>
  <plugin ID="Reactive Script Editor">
   <library code="--[[ Helper function to create a series from arrays&#xa;&#xa; new_series: a series previously created with ScatterXY.new(name)&#xa; prefix:     prefix of the timeseries, before the index of the array&#xa; suffix_X:   suffix to complete the name of the series containing the X value. If [nil], use the index of the array.&#xa; suffix_Y:   suffix to complete the name of the series containing the Y value&#xa; timestamp:   usually the tracker_time variable&#xa;              &#xa; Example:&#xa; &#xa; Assuming we have multiple series in the form:&#xa; &#xa;   /trajectory/node.{X}/position/x&#xa;   /trajectory/node.{X}/position/y&#xa;   &#xa; where {N} is the index of the array (integer). We can create a reactive series from the array with:&#xa; &#xa;   new_series = ScatterXY.new(&quot;my_trajectory&quot;) &#xa;   CreateSeriesFromArray( new_series, &quot;/trajectory/node&quot;, &quot;position/x&quot;, &quot;position/y&quot;, tracker_time );&#xa;--]]&#xa;&#xa;function CreateSeriesFromArray( new_series, prefix, suffix_X, suffix_Y, timestamp )&#xa;  &#xa;  --- clear previous values&#xa;  new_series:clear()&#xa;  &#xa;  --- Append points to new_series&#xa;  index = 0&#xa;  while(true) do&#xa;&#xa;    x = index;&#xa;    -- if not nil, get the X coordinate from a series&#xa;    if suffix_X ~= nil then &#xa;      series_x = TimeseriesView.find( string.format( &quot;%s.%d/%s&quot;, prefix, index, suffix_X) )&#xa;      if series_x == nil then break end&#xa;      x = series_x:atTime(timestamp)&#x9; &#xa;    end&#xa;    &#xa;    series_y = TimeseriesView.find( string.format( &quot;%s.%d/%s&quot;, prefix, index, suffix_Y) )&#xa;    if series_y == nil then break end &#xa;    y = series_y:atTime(timestamp)&#xa;    &#xa;    new_series:push_back(x,y)&#xa;    index = index+1&#xa;  end&#xa;end&#xa;&#xa;--[[ Similar to the built-in function GetSeriesNames(), but select only the names with a give prefix. --]]&#xa;&#xa;function GetSeriesNamesByPrefix(prefix)&#xa;  -- GetSeriesNames(9 is a built-in function&#xa;  all_names = GetSeriesNames()&#xa;  filtered_names = {}&#xa;  for i, name in ipairs(all_names)  do&#xa;    -- check the prefix&#xa;    if name:find(prefix, 1, #prefix) then&#xa;      table.insert(filtered_names, name);&#xa;    end&#xa;  end&#xa;  return filtered_names&#xa;end&#xa;&#xa;--[[ Modify an existing series, applying offsets to all their X and Y values&#xa;&#xa; series: an existing timeseries, obtained with TimeseriesView.find(name)&#xa; delta_x: offset to apply to each x value&#xa; delta_y: offset to apply to each y value &#xa;  &#xa;--]]&#xa;&#xa;function ApplyOffsetInPlace(series, delta_x, delta_y)&#xa;  -- use C++ indeces, not Lua indeces&#xa;  for index=0, series:size()-1 do&#xa;    x,y = series:at(index)&#xa;    series:set(index, x + delta_x, y + delta_y)&#xa;  end&#xa;end&#xa;"/>
   <scripts/>
  </plugin>
  <plugin ID="CSV Exporter"/>
  <plugin ID="ROS2 Topic Re-Publisher"/>
 </Plugins>
 <!-- - - - - - - - - - - - - - - -->
 <previouslyLoaded_Datafiles/>
 <previouslyLoaded_Streamer name="ROS2 Topic Subscriber"/>
 <!-- - - - - - - - - - - - - - - -->
 <customMathEquations/>
 <snippets/>
 <!-- - - - - - - - - - - - - - - -->
</root>

